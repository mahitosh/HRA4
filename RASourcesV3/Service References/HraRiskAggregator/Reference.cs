//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RiskApps3.HraRiskAggregator {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/RiskAggregator")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnyClass", Namespace="http://schemas.datacontract.org/2004/07/RiskAggregator")]
    [System.SerializableAttribute()]
    public partial class AnyClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Xml.XmlElement AnyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.XmlElement Any {
            get {
                return this.AnyField;
            }
            set {
                if ((object.ReferenceEquals(this.AnyField, value) != true)) {
                    this.AnyField = value;
                    this.RaisePropertyChanged("Any");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HraRiskAggregator.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        RiskApps3.HraRiskAggregator.CompositeType GetDataUsingDataContract(RiskApps3.HraRiskAggregator.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStringData", ReplyAction="http://tempuri.org/IService1/GetStringDataResponse")]
        string GetStringData(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRiskDataWithLicense", ReplyAction="http://tempuri.org/IService1/GetRiskDataWithLicenseResponse")]
        string GetRiskDataWithLicense(string HL7FHx, string License);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRiskDataWithLicenseAsXML", ReplyAction="http://tempuri.org/IService1/GetRiskDataWithLicenseAsXMLResponse")]
        RiskApps3.HraRiskAggregator.AnyClass GetRiskDataWithLicenseAsXML(string HL7FHx, string License);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRiskDataWithLicenseAsXMLCData", ReplyAction="http://tempuri.org/IService1/GetRiskDataWithLicenseAsXMLCDataResponse")]
        RiskApps3.HraRiskAggregator.AnyClass GetRiskDataWithLicenseAsXMLCData(string HL7FHx, string License);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRiskDataWithDetails", ReplyAction="http://tempuri.org/IService1/GetRiskDataWithDetailsResponse")]
        string GetRiskDataWithDetails(string HL7FHx, string License);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HeartBeat", ReplyAction="http://tempuri.org/IService1/HeartBeatResponse")]
        bool HeartBeat(string License);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRiskData", ReplyAction="http://tempuri.org/IService1/GetRiskDataResponse")]
        string GetRiskData(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSummaryReportFromHL7", ReplyAction="http://tempuri.org/IService1/GetSummaryReportFromHL7Response")]
        string GetSummaryReportFromHL7(string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : RiskApps3.HraRiskAggregator.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<RiskApps3.HraRiskAggregator.IService1>, RiskApps3.HraRiskAggregator.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public RiskApps3.HraRiskAggregator.CompositeType GetDataUsingDataContract(RiskApps3.HraRiskAggregator.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public string GetStringData(string value) {
            return base.Channel.GetStringData(value);
        }
        
        public string GetRiskDataWithLicense(string HL7FHx, string License) {
            return base.Channel.GetRiskDataWithLicense(HL7FHx, License);
        }
        
        public RiskApps3.HraRiskAggregator.AnyClass GetRiskDataWithLicenseAsXML(string HL7FHx, string License) {
            return base.Channel.GetRiskDataWithLicenseAsXML(HL7FHx, License);
        }
        
        public RiskApps3.HraRiskAggregator.AnyClass GetRiskDataWithLicenseAsXMLCData(string HL7FHx, string License) {
            return base.Channel.GetRiskDataWithLicenseAsXMLCData(HL7FHx, License);
        }
        
        public string GetRiskDataWithDetails(string HL7FHx, string License) {
            return base.Channel.GetRiskDataWithDetails(HL7FHx, License);
        }
        
        public bool HeartBeat(string License) {
            return base.Channel.HeartBeat(License);
        }
        
        public string GetRiskData(string value) {
            return base.Channel.GetRiskData(value);
        }
        
        public string GetSummaryReportFromHL7(string value) {
            return base.Channel.GetSummaryReportFromHL7(value);
        }
    }
}
